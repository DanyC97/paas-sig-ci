---
## Note: originally we added the v to the version, but for consistency this should be the exact version
## ex. 3.10.0-alpha.0 becomes v3.10.0-alpha.0
# To find this out:
# git ls-remote --tags https://github.com/openshift/origin | sort -t '/' -k 3 -V
# | tail -1 | awk '{print $2}' | sed 's/refs\/tags\/\(.*\)/\1/' | sed 's/\^{}//'

- debug:
    msg: "PaaS-sig Props: {{ item.prop }} [ {{ item.value }} ]"
  with_items:
    - { prop: 'project', value: "{{ project }}" }
    - { prop: 'origin_version', value: "{{ origin_version }}" }
    - { prop: 'bleeding_edge', value: "{{ bleeding_edge }}" }

- name: "Checkout origin version - {{ origin_version }}"
  command: git checkout {{ origin_version }}
  args:
    chdir: "{{ openshift_repo_path }}"
  when:
    - not ( bleeding_edge | bool )

- name: "Patch tito's common.py since origin 3.7 is broken"
  copy:
    src: "{{ role_path }}/files/common.py"
    dest: "{{ openshift_repo_path }}/.tito/lib/origin/common.py"
  when:
    - origin_version.split('-')[0] | regex_replace('v') | version_compare('3.7', '>=', strict=True)
    - origin_version.split('-')[0] | regex_replace('v') | version_compare('3.8', '<', strict=True)

- name: "Update git vars in origin.spec"
  lineinfile:
    dest: "{{ openshift_repo_path }}/origin.spec"
    regexp: "^%global os_git_vars .*$"
    line: "%global os_git_vars OS_GIT_VERSION={{ origin_version }} OS_GIT_COMMIT= OS_GIT_MAJOR={{ origin_version.split('.')[0] | regex_replace('v') }} OS_GIT_MINOR={{ origin_version.split('.')[1] }}+ OS_GIT_TREE_STATE='clean' OS_GIT_CATALOG_VERSION=''"
    backrefs: yes
    state: present

- name: "Update git version in origin.spec"
  lineinfile:
    dest: "{{ openshift_repo_path }}/origin.spec"
    regexp: "^Version:.*$"
    line: "Version:        {{ origin_version.split('-')[0] | regex_replace('v') }}"
    backrefs: yes
    state: present

- name: "Update git release in origin.spec for Alpha or RC version"
  lineinfile:
    dest: "{{ openshift_repo_path }}/origin.spec"
    regexp: "^Release:.*$"
    line: "Release:        0.{{ origin_version.split('-')[1] }}%{dist}"
    backrefs: yes
    state: present
  when: origin_version.split('-')[1] is defined

- name: "Update git release in origin.spec for official release"
  lineinfile:
    dest: "{{ openshift_repo_path }}/origin.spec"
    regexp: "^Release:.*$"
    line: "Release:        1%{dist}"
    backrefs: yes
    state: present
  when: origin_version.split('-')[1] is not defined

- name: "Git commit changes locally for origin - {{ origin_version }}"
  command: git commit -m "Fixup spec file - {{ origin_version }}" origin.spec
  args:
    chdir: "{{ openshift_repo_path }}"

- name: debug task
  shell: git log -n 1 -p
  args:
    chdir: "{{ openshift_repo_path }}"
